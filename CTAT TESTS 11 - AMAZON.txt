CTAT Assessment Test 11



1)Given an array of numbers, the task is to print those numbers in ascending order separated by space which have 1, 2 and 3 in their digits. If no number containing digits 1, 2, and 3 present then print -1.



CODE :- 


#include<stdio.h>
#include<malloc.h>
#include<stdlib.h>
int cmp( const void* n1 , const void *n2)
{
int num1 , num2;
num1 = *( const int*)n1;
num2 = *(const int*)n2;
return (num1)<(num2)?0:1;
}
int isItContain123( int num )
{
int of=0,tf=0,thf=0,rem;

while( num)
{
rem = num % 10;
if( rem == 1 )of=1;
else if( rem == 2) tf=1;
else if ( rem == 3) thf=1;
num/=10;
}
if( of==1&&tf==1&&thf==1) return 1;
else return 0;
}
int main()
{
int *arr,n,ctr,ctr1=0,*narr;
scanf("%d",&n);
arr=(int*)malloc(n*sizeof(int));
narr= (int*)malloc(n*sizeof(int));
for( ctr =0 ; ctr < n ; ctr++ )
scanf("%d",&arr[ctr]);
for( ctr = 0 ; ctr < n ; ctr++ )
if( isItContain123(arr[ctr]) ==1)
narr[ctr1++]=arr[ctr];
if( ctr1!=0)
{
qsort(narr,ctr1,sizeof(int),cmp);
for( ctr =0 ; ctr<ctr1;ctr++)
printf("%d ",narr[ctr]);
}
else printf("-1");
return 0;
}



2)let they be N. Now he visits K places before reaching home. At each place he can buy a cake, sell a cake . But he must sell L cakes before reaching home.Find the maximum number of cakes he can have at any point in his journey.N,K,L are given as input there is no possible to sell a cakes display -1?

CODE :-


#include<stdio.h>
int main()
{
int N , K , L;
scanf("%d%d%d",&N ,&K, &L);
if( K < L)
printf("-1");
else if( N < L && ((K-L)+ N) == L)
printf("%d ", L - ((K - L) + N));
else if(N >= L)
printf("%d " , N = N + K - L );
else
printf("-1");
return 0 ;
}



3)Email name should be starts with alphabet and should follow by numbers or underscore.


CODE :-

#include<stdio.h>
#define isAlpha(ch) (ch >= 'a' && ch <= 'z')
#define isDigit(ch) (ch >= '0' && ch <= '9')

int strcmp(const char* s1 , const char *s2)
{
int ind;
for(ind= 0 ; s1[ind] && s2[ind] && s1[ind] == s2[ind];ind++);
return s1[ind] - s2[ind];
}
int main()
{
char email[50];
int ind;
scanf("%s" , email);
for(ind = 0 ; email[ind] && isAlpha(email[ind]) ; ind++);
if(ind == 0 && isDigit(email[0]))
printf("false");
else if( isDigit(email[ind]))
{
for(ind++ ; email[ind] && (isDigit(email[ind])) ; ind++);
if(email[ind]!='_' && strcmp(email+ind ,"@gmail.com") == 0 )
printf("true");
else
printf("false");
}
else if( email[ind] == '_' && strcmp(email+ind+1 , "@gmail.com") == 0 )
printf("true");
else
printf("false");
return 0;
}


4)You have to classify a string as “GOOD”, “BAD” or “MIXED”. A string is composed of lowercase alphabets and ‘?’. A ‘?’ is to be replaced by


CODE :- 


#include<stdio.h>
#include<malloc.h>
#define isVowel(ch) (mystrchr( "aeiou" , ch) != 0 )
int mystrchr(char * str , char ch)
{
int ind;
for(ind = 0 ; str[ind] ; ind++)
{
if(str[ind] == ch)
return 1;
}
return 0;
}
int mystrlen(const char * str)
{
int ind;
for(ind = 0 ; str[ind] ; ind++);
return ind;
}
int main()
{

char str[50];
char st [50];
scanf("%s" , str);
int ind , len;
int *vowelarr , *consonantarr , *result;
vowelarr = (int*)malloc(mystrlen(str) * sizeof(int));
consonantarr = (int*)malloc(mystrlen(str) * sizeof(int));
result = (int*)malloc(mystrlen(str) * sizeof(int));

for(ind = 0 ; str[ind] ; ind++)
{
if( str[ind] == '?')
{
vowelarr[ind] = 1;
consonantarr[ind] = 1;
continue;
}
else if( isVowel(str[ind]))
{
vowelarr[ind] = 1;
consonantarr[ind] = 0;
}
else
{
vowelarr[ind] = 0;
consonantarr[ind] = 1;
}

}
len = mystrlen(str);
result[0] = consonantarr[0];
for(ind = 1 ; ind < len ; ind++)
{
if( vowelarr[ind] == 0 && vowelarr[ind-1] == 0)
result[ind] = result[ind - 1] + 1;
else
result[ind] = consonantarr[ind];
}
if( result[len-1] < 3)
printf("Good");
else if( result[len-1] >= 3)
printf("Bad");
else if(result[len-1] == 0 || (len == 6 && result[len-1] == 1))
printf("Mixed");
return 0;
}



5)Given 5,1,4,7,9....do alternate sort (odd position sorting) for this..and print 4,5,9

CODE :- 


#include<stdio.h>
#include<limits.h>
int main()
{
int arr[1000],ctr,ctr1,min=INT_MAX,minPos=-1;
int size,temp;
scanf("%d",&size);
for( ctr = 0 ; ctr< size; ctr++ )
scanf("%d",&arr[ctr]);
for(ctr =0 ; ctr< size -2 ; ctr+=2)
{
for( ctr1 = ctr ; ctr1 < size ; ctr1+=2 )
{
if( arr[ctr1] < min )
{
min = arr[ctr1];
minPos = ctr1;
}
}
temp = arr[ctr];
arr[ctr] = arr[minPos];
arr[minPos] = temp;
min = INT_MAX;
minPos = -1;
}
for( ctr = 0; ctr< size ; ctr+=2)
printf("%d ", arr[ctr]);
}
