Test -3 ( ZOHO )

1)Get a 2 input from a user, first one for count of step and 2nd one for direction(only top and bottom). Find the position after moving by upward or downward by the specied number of steps

CODE :- NO CODE 



2)Generate a series where the odd terms are multiples of 2 and even terms are obtained by dividing previous term by 2


CODE :- 

#include<stdio.h>
int main()
{
 int n,num;
 scanf("%d",&num);
 for(n=1;n<=num;n++)
 {
 if(n%2==0)
 printf("%d ",n/2-1);
 else
 printf("%d ",n-1);
 }
 return 0;
}



3)Write a program to given a range of numbers ,find the highly composite number in that range.(has the greatest number of factors)

CODE :- 


#include<stdio.h>
int main()
{
 int num,num1,count=0,ctr,h=0,k;
 scanf("%d %d",&num,&num1);
 for(int itr=num;itr<=num1;itr++)
 {
 count=0;
 for(ctr=1;ctr<=itr;ctr++)
 {
 if(itr%ctr==0)
 {
 count++;
 }
 }
 if(h<count)
 {
 h=count;
 k=itr;
 }
 }
 printf("%d",k);
 return 0;
}



4)Write a program to calculate the power using recursion

CODE :- 


#include<stdio.h>
int powerCalc(int num,int power)
{
 if(power==0)
 return 1;
 return num*powerCalc(num,power-1);
}
int main()
{
 int num,power;
 scanf("%d %d",&num,&power);
 printf("%d",powerCalc(num,power));
 return 0;
}


5)Write a program to check whether matrix is sparse matrix. In a sparse matrix, more than half the elements are zero

CODE :- 


#include<stdio.h>
int main()
{
int row,col,ind,ind1,count=0;
scanf("%d %d",&row,&col);
int arr[row][col];
for(ind=0;ind<row;ind++)
{
for(ind1=0;ind1<col;ind1++)
{
scanf("%d",&arr[ind][ind1]);
if(arr[ind][ind1]==0)
{
count++;
}
}
}
if(count>(row*col)/2)
{
printf("Sparse Matrix";
}
else
{
printf("Not a Sparse Matrix";
}
return 0;
}